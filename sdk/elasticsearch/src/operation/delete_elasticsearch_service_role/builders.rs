// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::delete_elasticsearch_service_role::_delete_elasticsearch_service_role_output::DeleteElasticsearchServiceRoleOutputBuilder;

pub use crate::operation::delete_elasticsearch_service_role::_delete_elasticsearch_service_role_input::DeleteElasticsearchServiceRoleInputBuilder;

impl DeleteElasticsearchServiceRoleInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleError,
                            ::aws_smithy_http::operation::Response
                        >
                    >   {
                        let mut fluent_builder = client.delete_elasticsearch_service_role();
                        fluent_builder.inner = self;
                        fluent_builder.send().await
                    }
}
/// Fluent builder constructing a request to `DeleteElasticsearchServiceRole`.
/// 
/// <p>Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains. Role deletion will fail if any existing VPC domains use the role. You must delete any such Elasticsearch domains before deleting the role. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-enabling-slr" target="_blank">Deleting Elasticsearch Service Role</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DeleteElasticsearchServiceRoleFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::delete_elasticsearch_service_role::builders::DeleteElasticsearchServiceRoleInputBuilder,
}
impl DeleteElasticsearchServiceRoleFluentBuilder  {
    /// Creates a new `DeleteElasticsearchServiceRole`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: ::std::default::Default::default(),
        }
    }
    /// Access the DeleteElasticsearchServiceRole as a reference.
    pub fn as_input(&self) -> &crate::operation::delete_elasticsearch_service_role::builders::DeleteElasticsearchServiceRoleInputBuilder {
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRole, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleError>
                        >  {
                            let handle = self.handle.clone();
                            let operation = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            ::std::result::Result::Ok(crate::client::customize::CustomizableOperation { handle, operation })
                        }
    
                        // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleOutput, ::aws_smithy_http::result::SdkError<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleError>>
                         {
                            let op = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&self.handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            self.handle.client.call(op).await
                        }
    /// Sends the request and returns the response.
                            ///
                            /// If an error occurs, an `SdkError` will be returned with additional details that
                            /// can be matched against.
                            ///
                            /// By default, any retryable failures will be retried twice. Retry behavior
                            /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                            /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleOutput, ::aws_smithy_http::result::SdkError<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleError>>
                             {
                                self.send_middleware().await
                            }
    
                            /// Consumes this builder, creating a customizable operation that can be modified before being
                            /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRole, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::delete_elasticsearch_service_role::DeleteElasticsearchServiceRoleError>
                            >  {
                                self.customize_middleware().await
                            }
}

