// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_resource_definition_version::_get_resource_definition_version_output::GetResourceDefinitionVersionOutputBuilder;

pub use crate::operation::get_resource_definition_version::_get_resource_definition_version_input::GetResourceDefinitionVersionInputBuilder;

impl GetResourceDefinitionVersionInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::get_resource_definition_version::GetResourceDefinitionVersionOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::get_resource_definition_version::GetResourceDefinitionVersionError,
                            ::aws_smithy_http::operation::Response
                        >
                    >   {
                        let mut fluent_builder = client.get_resource_definition_version();
                        fluent_builder.inner = self;
                        fluent_builder.send().await
                    }
}
/// Fluent builder constructing a request to `GetResourceDefinitionVersion`.
/// 
/// Retrieves information about a resource definition version, including which resources are included in the version.
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct GetResourceDefinitionVersionFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::get_resource_definition_version::builders::GetResourceDefinitionVersionInputBuilder,
}
impl GetResourceDefinitionVersionFluentBuilder  {
    /// Creates a new `GetResourceDefinitionVersion`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: ::std::default::Default::default(),
        }
    }
    /// Access the GetResourceDefinitionVersion as a reference.
    pub fn as_input(&self) -> &crate::operation::get_resource_definition_version::builders::GetResourceDefinitionVersionInputBuilder {
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::get_resource_definition_version::GetResourceDefinitionVersion, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionError>
                        >  {
                            let handle = self.handle.clone();
                            let operation = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            ::std::result::Result::Ok(crate::client::customize::CustomizableOperation { handle, operation })
                        }
    
                        // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionError>>
                         {
                            let op = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&self.handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            self.handle.client.call(op).await
                        }
    /// Sends the request and returns the response.
                            ///
                            /// If an error occurs, an `SdkError` will be returned with additional details that
                            /// can be matched against.
                            ///
                            /// By default, any retryable failures will be retried twice. Retry behavior
                            /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                            /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionError>>
                             {
                                self.send_middleware().await
                            }
    
                            /// Consumes this builder, creating a customizable operation that can be modified before being
                            /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::get_resource_definition_version::GetResourceDefinitionVersion, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::get_resource_definition_version::GetResourceDefinitionVersionError>
                            >  {
                                self.customize_middleware().await
                            }
    /// The ID of the resource definition.
    pub fn resource_definition_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.resource_definition_id(input.into());
        self
    }
    /// The ID of the resource definition.
    pub fn set_resource_definition_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_resource_definition_id(input);
        self
    }
    /// The ID of the resource definition.
    pub fn get_resource_definition_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_resource_definition_id()
    }
    /// The ID of the resource definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListResourceDefinitionVersions'' requests. If the version is the last one that was associated with a resource definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn resource_definition_version_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.resource_definition_version_id(input.into());
        self
    }
    /// The ID of the resource definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListResourceDefinitionVersions'' requests. If the version is the last one that was associated with a resource definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn set_resource_definition_version_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_resource_definition_version_id(input);
        self
    }
    /// The ID of the resource definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListResourceDefinitionVersions'' requests. If the version is the last one that was associated with a resource definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn get_resource_definition_version_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_resource_definition_version_id()
    }
}

