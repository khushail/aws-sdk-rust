// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_asset_property::_describe_asset_property_output::DescribeAssetPropertyOutputBuilder;

pub use crate::operation::describe_asset_property::_describe_asset_property_input::DescribeAssetPropertyInputBuilder;

impl DescribeAssetPropertyInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::describe_asset_property::DescribeAssetPropertyOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::describe_asset_property::DescribeAssetPropertyError,
                            ::aws_smithy_http::operation::Response
                        >
                    >   {
                        let mut fluent_builder = client.describe_asset_property();
                        fluent_builder.inner = self;
                        fluent_builder.send().await
                    }
}
/// Fluent builder constructing a request to `DescribeAssetProperty`.
/// 
/// <p>Retrieves information about an asset property.</p> <note> 
/// <p>When you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation's response includes the new default value.</p> 
/// </note> 
/// <p>This operation doesn't return the value of the asset property. To get the value of an asset property, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html">GetAssetPropertyValue</a>.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DescribeAssetPropertyFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::describe_asset_property::builders::DescribeAssetPropertyInputBuilder,
}
impl DescribeAssetPropertyFluentBuilder  {
    /// Creates a new `DescribeAssetProperty`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: ::std::default::Default::default(),
        }
    }
    /// Access the DescribeAssetProperty as a reference.
    pub fn as_input(&self) -> &crate::operation::describe_asset_property::builders::DescribeAssetPropertyInputBuilder {
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::describe_asset_property::DescribeAssetProperty, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::describe_asset_property::DescribeAssetPropertyError>
                        >  {
                            let handle = self.handle.clone();
                            let operation = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            ::std::result::Result::Ok(crate::client::customize::CustomizableOperation { handle, operation })
                        }
    
                        // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::describe_asset_property::DescribeAssetPropertyOutput, ::aws_smithy_http::result::SdkError<crate::operation::describe_asset_property::DescribeAssetPropertyError>>
                         {
                            let op = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&self.handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            self.handle.client.call(op).await
                        }
    /// Sends the request and returns the response.
                            ///
                            /// If an error occurs, an `SdkError` will be returned with additional details that
                            /// can be matched against.
                            ///
                            /// By default, any retryable failures will be retried twice. Retry behavior
                            /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                            /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::describe_asset_property::DescribeAssetPropertyOutput, ::aws_smithy_http::result::SdkError<crate::operation::describe_asset_property::DescribeAssetPropertyError>>
                             {
                                self.send_middleware().await
                            }
    
                            /// Consumes this builder, creating a customizable operation that can be modified before being
                            /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::describe_asset_property::DescribeAssetProperty, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::describe_asset_property::DescribeAssetPropertyError>
                            >  {
                                self.customize_middleware().await
                            }
    /// <p>The ID of the asset.</p>
    pub fn asset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.asset_id(input.into());
        self
    }
    /// <p>The ID of the asset.</p>
    pub fn set_asset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_asset_id(input);
        self
    }
    /// <p>The ID of the asset.</p>
    pub fn get_asset_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_asset_id()
    }
    /// <p>The ID of the asset property.</p>
    pub fn property_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.property_id(input.into());
        self
    }
    /// <p>The ID of the asset property.</p>
    pub fn set_property_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_property_id(input);
        self
    }
    /// <p>The ID of the asset property.</p>
    pub fn get_property_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_property_id()
    }
}

