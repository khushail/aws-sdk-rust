// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_identity_dkim_attributes::_get_identity_dkim_attributes_output::GetIdentityDkimAttributesOutputBuilder;

pub use crate::operation::get_identity_dkim_attributes::_get_identity_dkim_attributes_input::GetIdentityDkimAttributesInputBuilder;

impl GetIdentityDkimAttributesInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesError,
                            ::aws_smithy_http::operation::Response
                        >
                    >   {
                        let mut fluent_builder = client.get_identity_dkim_attributes();
                        fluent_builder.inner = self;
                        fluent_builder.send().await
                    }
}
/// Fluent builder constructing a request to `GetIdentityDkimAttributes`.
/// 
/// <p>Returns the current status of Easy DKIM signing for an entity. For domain name identities, this operation also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.</p> 
/// <p>This operation takes a list of identities as input and returns the following information for each:</p> 
/// <ul> 
/// <li> <p>Whether Easy DKIM signing is enabled or disabled.</p> </li> 
/// <li> <p>A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.</p> </li> 
/// <li> <p>Whether Amazon SES has successfully verified the DKIM tokens published in the domain's DNS. This information is only returned for domain name identities, not for email addresses.</p> </li> 
/// </ul> 
/// <p>This operation is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.</p> 
/// <p>For more information about creating DNS records using DKIM tokens, go to the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon SES Developer Guide</a>.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct GetIdentityDkimAttributesFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::get_identity_dkim_attributes::builders::GetIdentityDkimAttributesInputBuilder,
}
impl GetIdentityDkimAttributesFluentBuilder  {
    /// Creates a new `GetIdentityDkimAttributes`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: ::std::default::Default::default(),
        }
    }
    /// Access the GetIdentityDkimAttributes as a reference.
    pub fn as_input(&self) -> &crate::operation::get_identity_dkim_attributes::builders::GetIdentityDkimAttributesInputBuilder {
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributes, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesError>
                        >  {
                            let handle = self.handle.clone();
                            let operation = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            ::std::result::Result::Ok(crate::client::customize::CustomizableOperation { handle, operation })
                        }
    
                        // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesError>>
                         {
                            let op = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&self.handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            self.handle.client.call(op).await
                        }
    /// Sends the request and returns the response.
                            ///
                            /// If an error occurs, an `SdkError` will be returned with additional details that
                            /// can be matched against.
                            ///
                            /// By default, any retryable failures will be retried twice. Retry behavior
                            /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                            /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesError>>
                             {
                                self.send_middleware().await
                            }
    
                            /// Consumes this builder, creating a customizable operation that can be modified before being
                            /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributes, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::get_identity_dkim_attributes::GetIdentityDkimAttributesError>
                            >  {
                                self.customize_middleware().await
                            }
    /// Appends an item to `Identities`.
    ///
    /// To override the contents of this collection use [`set_identities`](Self::set_identities).
    ///
    /// <p>A list of one or more verified identities - email addresses, domains, or both.</p>
    pub fn identities(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.identities(input.into());
        self
    }
    /// <p>A list of one or more verified identities - email addresses, domains, or both.</p>
    pub fn set_identities(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_identities(input);
        self
    }
    /// <p>A list of one or more verified identities - email addresses, domains, or both.</p>
    pub fn get_identities(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_identities()
    }
}

