// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_phone_number_settings::_update_phone_number_settings_output::UpdatePhoneNumberSettingsOutputBuilder;

pub use crate::operation::update_phone_number_settings::_update_phone_number_settings_input::UpdatePhoneNumberSettingsInputBuilder;

impl UpdatePhoneNumberSettingsInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsError,
                            ::aws_smithy_http::operation::Response
                        >
                    >   {
                        let mut fluent_builder = client.update_phone_number_settings();
                        fluent_builder.inner = self;
                        fluent_builder.send().await
                    }
}
/// Fluent builder constructing a request to `UpdatePhoneNumberSettings`.
/// 
/// <p>Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct UpdatePhoneNumberSettingsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::update_phone_number_settings::builders::UpdatePhoneNumberSettingsInputBuilder,
}
impl UpdatePhoneNumberSettingsFluentBuilder  {
    /// Creates a new `UpdatePhoneNumberSettings`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: ::std::default::Default::default(),
        }
    }
    /// Access the UpdatePhoneNumberSettings as a reference.
    pub fn as_input(&self) -> &crate::operation::update_phone_number_settings::builders::UpdatePhoneNumberSettingsInputBuilder {
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettings, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsError>
                        >  {
                            let handle = self.handle.clone();
                            let operation = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            ::std::result::Result::Ok(crate::client::customize::CustomizableOperation { handle, operation })
                        }
    
                        // This function will go away in the near future. Do not rely on it.
                        #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsOutput, ::aws_smithy_http::result::SdkError<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsError>>
                         {
                            let op = self.inner.build().map_err(::aws_smithy_http::result::SdkError::construction_failure)?
                                .make_operation(&self.handle.conf)
                                .await
                                .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
                            self.handle.client.call(op).await
                        }
    /// Sends the request and returns the response.
                            ///
                            /// If an error occurs, an `SdkError` will be returned with additional details that
                            /// can be matched against.
                            ///
                            /// By default, any retryable failures will be retried twice. Retry behavior
                            /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                            /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsOutput, ::aws_smithy_http::result::SdkError<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsError>>
                             {
                                self.send_middleware().await
                            }
    
                            /// Consumes this builder, creating a customizable operation that can be modified before being
                            /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettings, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::update_phone_number_settings::UpdatePhoneNumberSettingsError>
                            >  {
                                self.customize_middleware().await
                            }
    /// <p>The default outbound calling name for the account.</p>
    pub fn calling_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.calling_name(input.into());
        self
    }
    /// <p>The default outbound calling name for the account.</p>
    pub fn set_calling_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_calling_name(input);
        self
    }
    /// <p>The default outbound calling name for the account.</p>
    pub fn get_calling_name(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_calling_name()
    }
}

